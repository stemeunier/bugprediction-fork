name: Generate report
on:
  workflow_dispatch:
    inputs:
      project-name:
        type: choice
        description: 'Project'
        options: 
        - jpeek
        - RxJva
        - guava
        - mockito
        - quarkus
permissions:
  contents: write
jobs:
  container-test-job:
    runs-on: ubuntu-latest
    container:
      image: python:3.10-slim
    steps:
      - name: Install dependencies
        run: |
          apt-get -y update
          apt-get install -y git openjdk-17-jre php-cli php-xml
      - uses: actions/checkout@v3
      - name: Install pip requirement
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
      - name: Get env file in dataset
        env: 
          PROJECT: ${{ github.event.inputs.project-name }}
        run: |
          wget https://raw.githubusercontent.com/optittm/dataset/main/${PROJECT}/.env
          cd ./data/
          wget https://raw.githubusercontent.com/optittm/dataset/main/${PROJECT}/${PROJECT}.sqlite3
          # cp ./data/.env-${{ github.event.inputs.project-name }} ./.env
      - name: Info
        run: |
          python main.py info
      - name: Populate
        env:
          OTTM_SCM_TOKEN: ${{ GITHUB.TOKEN }}
        run: |
          python main.py populate
      - name: Update base sqlite3
        run: |          
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global --add safe.directory '*'
          git add -f ./data/*.sqlite3
          git commit -m "Update base sqlite3"
          git push
      - name: Train bugvelocity
        run: |
          python main.py train --model-name bugvelocity
      - name: Predict bugvelocity
        run: |          
          python main.py predict --model-name bugvelocity
      - name: Generate report
        run: |          
          python main.py report --output ./data
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: ./data/release.html
          retention-days: 8          
      - name: Generate export
        run: |          
          python main.py export --output ./data/export --format csv        
      - name: Upload export 
        uses: actions/upload-artifact@v3
        with:
          name: export-csv
          path: ./data/export/metrics.csv
          retention-days: 8
